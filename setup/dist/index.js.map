{"version":3,"sources":["../webpack:/notation-setup/index.js","../webpack:/notation-setup/lib/utils.js","../../usr/local/share/npm-global/lib/node_modules/@vercel/ncc/dist/ncc/@@notfound.js","../webpack:/notation-setup/external node-commonjs \"fs\"","../webpack:/notation-setup/external node-commonjs \"os\"","../webpack:/notation-setup/external node-commonjs \"path\"","../webpack:/notation-setup/webpack/bootstrap","../webpack:/notation-setup/webpack/runtime/compat","../webpack:/notation-setup/webpack/startup"],"names":["path","__webpack_require__","require","main","cache","eval","os","arch","mapOS","mappings","darwin","win32","getDownloadObject","version","platform","filename","extension","binPath","join","url","module","exports","__webpack_module_cache__","moduleId","cachedModule","undefined","threw","__webpack_modules__","ab","__dirname","__webpack_exports__"],"mappings":"2FAAA,MAAAA,KAAAC,oBAAA,6uBA0CA,GAAAC,QAAAC,OAAAD,QAAAE,MAAAC,KAAA,eAAA,yBC1CA,MAAAC,EAAAL,EAAA,IACA,MAAAD,EAAAC,EAAA,IACA,MAAAM,EAAA,QAIA,SAAAC,MAAAF,GACA,MAAAG,EAAA,CACAC,OAAA,QACAC,MAAA,WAEA,OAAAF,EAAAH,IAAAA,EAGA,SAAAM,kBAAAC,GACA,MAAAC,EAAAR,EAAAQ,WACA,MAAAC,EAAA,YAAAF,KAAAL,MAAAM,MAAAP,IACA,MAAAS,EAAAF,IAAA,QAAA,MAAA,SACA,MAAAG,EAAAH,IAAA,QAAA,MAAAd,EAAAkB,KAAAH,EAAA,OACA,MAAAI,EAAA,gEAAAN,KAAAE,KAAAC,IACA,MAAA,CACAG,IAAAA,EACAF,QAAAA,EACAF,SAAAA,GAIAK,EAAAC,QAAA,CAAAT,kBAAAA,iCC3BAQ,OAAAC,QAAAhB,KAAA,UAAAA,CAAA,+BAAAe,OAAAC,QAAAhB,KAAA,UAAAA,CAAA,qCAAAe,OAAAC,QAAAhB,KAAA,UAAAA,CAAA,4BCAAe,EAAAC,QAAAnB,QAAA,2BCAAkB,EAAAC,QAAAnB,QAAA,2BCAAkB,EAAAC,QAAAnB,QAAA,UCCA,IAAAoB,yBAAA,GAGA,SAAArB,oBAAAsB,GAEA,IAAAC,EAAAF,yBAAAC,GACA,GAAAC,IAAAC,UAAA,CACA,OAAAD,EAAAH,QAGA,IAAAD,EAAAE,yBAAAC,GAAA,CAGAF,QAAA,IAIA,IAAAK,EAAA,KACA,IACAC,oBAAAJ,GAAAH,EAAAA,EAAAC,QAAApB,qBACAyB,EAAA,MACA,QACA,GAAAA,SAAAJ,yBAAAC,GAIA,OAAAH,EAAAC,QC1BA,UAAApB,sBAAA,YAAAA,oBAAA2B,GAAAC,UAAA,ICEA,IAAAC,oBAAA7B,oBAAA","file":"index.js","sourcesContent":[null,"const os = require('os');\r\nconst path = require('path');\r\nconst arch = \"amd64\";\r\n\r\n// os in [darwin, linux, win32...] (https://nodejs.org/api/os.html#os_os_platform)\r\n// return value in [darwin, linux, windows]\r\nfunction mapOS(os) {\r\n    const mappings = {\r\n        darwin: 'macOS',\r\n        win32: 'windows'\r\n    };\r\n    return mappings[os] || os;\r\n}\r\n\r\nfunction getDownloadObject(version) {\r\n    const platform = os.platform();\r\n    const filename = `notation_${version}_${mapOS(platform)}_${arch}`;\r\n    const extension = platform === 'win32' ? 'zip' : 'tar.gz';\r\n    const binPath = platform === 'win32' ? 'bin' : path.join(filename, 'bin');\r\n    const url = `https://github.com/notaryproject/notation/releases/download/v${version}/${filename}.${extension}`;\r\n    return {\r\n        url,\r\n        binPath,\r\n        filename\r\n    };\r\n}\r\n\r\nmodule.exports = { getDownloadObject }",null,"module.exports = require(\"fs\");","module.exports = require(\"os\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\tvar threw = true;\n\ttry {\n\t\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\t\tthrew = false;\n\t} finally {\n\t\tif(threw) delete __webpack_module_cache__[moduleId];\n\t}\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","\nif (typeof __webpack_require__ !== 'undefined') __webpack_require__.ab = __dirname + \"/\";","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(430);\n"]}